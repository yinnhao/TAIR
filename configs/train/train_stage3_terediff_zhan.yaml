model:
  cldm:
    target: terediff.model.cldm.ControlLDM
    params:
      latent_scale_factor: 0.18215
      unet_cfg:
        use_checkpoint: True
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_head_channels: 64 # need to fix for flash-attn
        use_spatial_transformer: True
        use_linear_in_transformer: True
        transformer_depth: 1
        context_dim: 1024
        legacy: False
      vae_cfg:
        embed_dim: 4
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
      clip_cfg:
        embed_dim: 1024
        vision_cfg:
          image_size: 224
          layers: 32
          width: 1280
          head_width: 80
          patch_size: 14
        text_cfg:
          context_length: 77
          vocab_size: 49408
          width: 1024
          heads: 16
          layers: 24
        layer: "penultimate"
      controlnet_cfg:
        use_checkpoint: True
        image_size: 32 # unused
        in_channels: 4
        hint_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_head_channels: 64 # need to fix for flash-attn
        use_spatial_transformer: True
        use_linear_in_transformer: True
        transformer_depth: 1
        context_dim: 1024
        legacy: False

  swinir:
    target: terediff.model.swinir.SwinIR
    params:
      img_size: 64
      patch_size: 1
      in_chans: 3
      embed_dim: 180
      depths: [6, 6, 6, 6, 6, 6, 6, 6]
      num_heads: [6, 6, 6, 6, 6, 6, 6, 6]
      window_size: 8
      mlp_ratio: 2
      sf: 8
      img_range: 1.0
      upsampler: "nearest+conv"
      resi_connection: "1conv"
      unshuffle: True
      unshuffle_scale: 8

  diffusion:
    target: terediff.model.gaussian_diffusion.Diffusion
    params:
      linear_start: 0.00085
      linear_end: 0.0120
      timesteps: 1000
      zero_snr: True
      parameterization: v

dataset:
  dataset_type: realsr
  train:
    target: terediff.dataset.realesrgan.RealESRGANDataset
    params:
      file_list: /root/paddlejob/workspace/env_run/sa_text
      file_backend_cfg:
        target: terediff.dataset.file_backend.HardDiskBackend
      out_size: 512
      crop_type: none
      use_hflip: false
      use_rot: false

      blur_kernel_size: 21
      kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
      kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
      sinc_prob: 0.1
      blur_sigma: [0.2, 3]
      betag_range: [0.5, 4]
      betap_range: [1, 2]

      blur_kernel_size2: 21
      kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
      kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
      sinc_prob2: 0.1
      blur_sigma2: [0.2, 1.5]
      betag_range2: [0.5, 4]
      betap_range2: [1, 2]
      final_sinc_prob: 0.8
      p_empty_prompt: 0.2
      data_args: {
        'mode': 'TRAIN',
        'datasets':['sam_cleaned_100k'], 
        'ann_path': '/root/paddlejob/workspace/env_run/sa_text/restoration_dataset.json',
        'model_img_size': [512, 512],
        }

  # validation data confid
  val:
    target: terediff.dataset.realesrgan.RealESRGANDataset
    params:
      file_list: /root/paddlejob/workspace/env_run/sa_text
      file_backend_cfg:
        target: terediff.dataset.file_backend.HardDiskBackend
      out_size: 512
      crop_type: none
      use_hflip: false
      use_rot: false

      blur_kernel_size: 21
      kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
      kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
      sinc_prob: 0.1
      blur_sigma: [0.2, 3]
      betag_range: [0.5, 4]
      betap_range: [1, 2]

      blur_kernel_size2: 21
      kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
      kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
      sinc_prob2: 0.1
      blur_sigma2: [0.2, 1.5]
      betag_range2: [0.5, 4]
      betap_range2: [1, 2]
      final_sinc_prob: 0.8
      p_empty_prompt: 0.0
      data_args: {
        'mode': 'VAL',
        'datasets':['sam_cleaned_100k'], 
        'ann_path': '/root/paddlejob/workspace/env_run/sa_text/restoration_dataset.json',
        'model_img_size': [512, 512],
        }

train_batch_transform:
  target: terediff.dataset.batch_transform.RealESRGANBatchTransform
  params:
    use_sharpener: true
    # Queue size of training pool, this should be multiples of batch_size (per GPU).
    queue_size: 48
    # the first degradation process
    resize_prob: [0.2, 0.7, 0.1] # up, down, keep
    resize_range: [0.15, 1.5]
    gaussian_noise_prob: 0.5
    noise_range: [1, 30]
    poisson_scale_range: [0.05, 3]
    gray_noise_prob: 0.4
    jpeg_range: [30, 95]
    # the second degradation process
    stage2_scale: 4
    second_blur_prob: 0.8
    resize_prob2: [0.3, 0.4, 0.3] # up, down, keep
    resize_range2: [0.3, 1.2]
    gaussian_noise_prob2: 0.5
    noise_range2: [1, 25]
    poisson_scale_range2: [0.05, 2.5]
    gray_noise_prob2: 0.4
    jpeg_range2: [30, 95]

val_batch_transform:
  target: terediff.dataset.batch_transform.RealESRGANBatchTransform
  params:
    use_sharpener: true
    # Queue size of training pool, this should be multiples of batch_size (per GPU).
    queue_size: 32
    # the first degradation process
    resize_prob: [0.2, 0.7, 0.1] # up, down, keep
    resize_range: [0.15, 1.5]
    gaussian_noise_prob: 0.5
    noise_range: [1, 30]
    poisson_scale_range: [0.05, 3]
    gray_noise_prob: 0.4
    jpeg_range: [30, 95]
    # the second degradation process
    stage2_scale: 4
    second_blur_prob: 0.8
    resize_prob2: [0.3, 0.4, 0.3] # up, down, keep
    resize_range2: [0.3, 1.2]
    gaussian_noise_prob2: 0.5
    noise_range2: [1, 25]
    poisson_scale_range2: [0.05, 2.5]
    gray_noise_prob2: 0.4
    jpeg_range2: [30, 95]

# training args
train:
  sd_path: ./weights/sd2.1-base-zsnr-laionaes5.ckpt       
  swinir_path: ./weights/realesrgan_s4_swinir_100k.pth
  resume: ./weights/DiffBIR_v2.1.pt
  noise_aug_timestep: 0
  num_workers: 4
  train_steps: 1000000
  ckpt_every: 250000
  log_loss_every: 50
  log_image_every: 500
  batch_size: 2
  log_num_train_img: 2
  learning_rate: 1e-5
  # experiment save directory path
  exp_dir: ./model_ckpts/sam_cleaned_100k/stage3

val:
  num_workers: 4
  batch_size: 2
  log_num_val_img: 2
  log_image_every: 500

log_args:
  log_tool: 
  wandb_key: 
  wandb_proj_name: 
## We recommend using wandb, uncomment the following lines and set the values
# log_args:
#   log_tool: wandb
#   wandb_key: PUT_YOUR_WANDB_KEY_HERE
#   wandb_proj_name: NAME_OF_YOUR_PROJECT

exp_args:
  mode: TRAIN                       # choose from [TRAIN, VAL]
  model_name: terediff_stage3       # choose from [terediff_stage1, terediff_stage2, terediff_stage3]
  testr_ckpt_dir: ./weights/totaltext_testr_R_50_polygon.pth
  finetuning_method: all_modules    # choose from [image_restoration_module, text_spotting_module, all_modules]
  unet_feat_sampling_timestep: [10,20,30,40,50]
  resume_ckpt_dir: /root/paddlejob/workspace/env_run/zhuyinghao/TAIR/model_ckpts/sam_cleaned_100k/stage2/TRAIN_terediff_stage2_text_spotting_module_bs2_lr0.0001/0100000.pt
  ocr_loss_weight: 0.01


  
  
  
  
  
